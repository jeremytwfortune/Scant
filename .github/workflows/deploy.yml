on:
  push:
    branches:
      - "main"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_IN_PROJECT: true
      POETRY_VIRTUALENVS_OPTIONS_ALWAYS_COPY: true
      POETRY_CACHE_DIR: "~/.poetry-cache"
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: "3.12"
      - uses: hashicorp/setup-terraform@97f030cf6dc0b4f5e0da352c7bca9cca34579800 # v3.1.0
      - name: Install Package Manager
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Set Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          mask-password: true
      - name: Build
        id: build
        shell: pwsh
        run: |
          $accountId = aws sts get-caller-identity --query Account --output text
          docker build --platform linux/amd64 -t scant:latest .
          docker tag scant:latest $accountId.dkr.ecr.us-east-1.amazonaws.com/scant/scanner:latest
          docker push $accountId.dkr.ecr.us-east-1.amazonaws.com/scant/scanner:latest
          "tag=$accountId.dkr.ecr.us-east-1.amazonaws.com/scant/scanner:latest" >> $Env:GITHUB_OUTPUT
      - name: Deploy
        working-directory: infrastructure
        run: |
          terraform init -backend-config="bucket=${{ secrets.TF_BUCKET }}"
          terraform apply -auto-approve
          aws lambda update-function-code --function-name scant-scanner --image-uri ${{ steps.build.outputs.tag }}
